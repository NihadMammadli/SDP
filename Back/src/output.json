{
    "2": {
        "1": [
            {
                "submission_id": 98,
                "code": "b'#include <stdio.h>\\n\\nint number, square;\\n\\nint main() {\\n    int num;\\n    printf(\"Enter a number to calculate its factorial: \");\\n    scanf(\"%d\", &num);\\n\\n    if (num < 0)\\n        printf(\"Factorial is not defined for negative numbers.\\\\n\");\\n    else\\n        printf(\"Factorial of %d is %d\\\\n\", num, factorial(num));\\n\\n    return 0;\\n}'",
                "submission_date": "2024-03-09T01:08:21.823Z"
            }
        ],
        "2": [
            {
                "submission_id": 141,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-26T14:40:16.693Z"
            }
        ],
        "6": [
            {
                "submission_id": 134,
                "code": "b'#include <stdio.h>\\n\\nint number, square;\\n\\nint main() {\\n    int num;\\n    printf(\"Enter a number to calculate its factorial: \");\\n    scanf(\"%d\", &num);\\n\\n    if (num < 0)\\n        printf(\"Factorial is not defined for negative numbers.\\\\n\");\\n    else\\n        printf(\"Factorial of %d is %d\\\\n\", num, factorial(num));\\n\\n    return 0;\\n}'",
                "submission_date": "2024-03-13T08:14:34.190Z"
            }
        ],
        "7": [
            {
                "submission_id": 99,
                "code": "b'#include <stdio.h>\\n\\nint number, square;\\n\\nint main() {\\n    int num;\\n    printf(\"Enter a number to calculate its factorial: \");\\n    scanf(\"%d\", &num);\\n\\n    if (num < 0)\\n        printf(\"Factorial is not defined for negative numbers.\\\\n\");\\n    else\\n        printf(\"Factorial of %d is %d\\\\n\", num, factorial(num));\\n\\n    return 0;\\n}'",
                "submission_date": "2024-03-09T01:09:32.074Z"
            }
        ],
        "8": [
            {
                "submission_id": 108,
                "code": "b'#include <stdio.h>\\n\\nint number, square;\\n\\nint main() {\\n    int num;\\n    printf(\"Enter a number to calculate its factorial: \");\\n    scanf(\"%d\", &num);\\n\\n    if (num < 0)\\n        printf(\"Factorial is not defined for negative numbers.\\\\n\");\\n    else\\n        printf(\"Factorial of %d is %d\\\\n\", num, factorial(num));\\n\\n    return 0;\\n}'",
                "submission_date": "2024-03-09T01:54:26.580Z"
            }
        ],
        "9": [
            {
                "submission_id": 61,
                "code": "b'#include <stdio.h>\\n\\nint main() {\\n    int number, square;\\n\\n\\n    return 0;\\n}\\n\\n'",
                "submission_date": "2024-02-20T16:07:59.710Z"
            }
        ],
        "10": [
            {
                "submission_id": 146,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-26T17:31:42.561Z"
            }
        ],
        "11": [
            {
                "submission_id": 133,
                "code": "b'#include <stdio.h>\\n\\nint number, square;\\n\\nint main() {\\n    int num;\\n    printf(\"Enter a number to calculate its factorial: \");\\n    scanf(\"%d\", &num);\\n\\n    if (num < 0)\\n        printf(\"Factorial is not defined for negative numbers.\\\\n\");\\n    else\\n        printf(\"Factorial of %d is %d\\\\n\", num, factorial(num));\\n\\n    return 0;\\n}'",
                "submission_date": "2024-03-13T08:13:26.500Z"
            }
        ],
        "12": [
            {
                "submission_id": 69,
                "code": "b'#include <stdio.h>\\n\\nint main() {\\n    int number, square;\\n\\n\\n    return 0;\\n}\\n\\n'",
                "submission_date": "2024-02-28T00:56:08.015Z"
            }
        ]
    },
    "3": {
        "1": [
            {
                "submission_id": 199,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T07:01:04.232Z"
            }
        ],
        "2": [
            {
                "submission_id": 145,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-26T17:30:48.878Z"
            }
        ],
        "3": [
            {
                "submission_id": 240,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:05:41.829Z"
            }
        ],
        "4": [
            {
                "submission_id": 321,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:27:43.203Z"
            }
        ],
        "5": [
            {
                "submission_id": 169,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-26T20:11:57.471Z"
            }
        ],
        "8": [
            {
                "submission_id": 155,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-26T20:00:55.228Z"
            }
        ],
        "9": [
            {
                "submission_id": 259,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:06:22.115Z"
            }
        ],
        "10": [
            {
                "submission_id": 196,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T07:00:56.233Z"
            }
        ],
        "11": [
            {
                "submission_id": 329,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:27:58.590Z"
            }
        ],
        "12": [
            {
                "submission_id": 290,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:07:21.945Z"
            }
        ],
        "15": [
            {
                "submission_id": 244,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:05:51.412Z"
            }
        ],
        "16": [
            {
                "submission_id": 334,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:28:08.634Z"
            }
        ],
        "18": [
            {
                "submission_id": 254,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:06:12.210Z"
            }
        ],
        "20": [
            {
                "submission_id": 213,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T07:01:35.044Z"
            }
        ],
        "21": [
            {
                "submission_id": 180,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T05:22:40.389Z"
            }
        ],
        "22": [
            {
                "submission_id": 306,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:07:53.206Z"
            }
        ],
        "24": [
            {
                "submission_id": 285,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:07:12.375Z"
            }
        ],
        "25": [
            {
                "submission_id": 316,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:27:33.348Z"
            }
        ],
        "26": [
            {
                "submission_id": 177,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-26T20:12:09.750Z"
            }
        ],
        "27": [
            {
                "submission_id": 251,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:06:06.544Z"
            }
        ],
        "28": [
            {
                "submission_id": 238,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T07:17:13.781Z"
            }
        ],
        "29": [
            {
                "submission_id": 191,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T07:00:45.343Z"
            }
        ],
        "30": [
            {
                "submission_id": 313,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:27:27.672Z"
            }
        ],
        "31": [
            {
                "submission_id": 300,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:07:41.589Z"
            }
        ],
        "32": [
            {
                "submission_id": 206,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T07:01:19.944Z"
            }
        ],
        "33": [
            {
                "submission_id": 287,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:07:16.191Z"
            }
        ],
        "34": [
            {
                "submission_id": 298,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:07:37.709Z"
            }
        ],
        "35": [
            {
                "submission_id": 308,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:27:17.965Z"
            }
        ],
        "38": [
            {
                "submission_id": 295,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:07:31.823Z"
            }
        ],
        "39": [
            {
                "submission_id": 318,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:27:37.396Z"
            }
        ],
        "40": [
            {
                "submission_id": 292,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:07:26.098Z"
            }
        ],
        "41": [
            {
                "submission_id": 323,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:27:47.080Z"
            }
        ],
        "42": [
            {
                "submission_id": 246,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:05:55.294Z"
            }
        ],
        "43": [
            {
                "submission_id": 326,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:27:52.832Z"
            }
        ],
        "44": [
            {
                "submission_id": 331,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:28:02.634Z"
            }
        ],
        "45": [
            {
                "submission_id": 217,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T07:01:55.757Z"
            }
        ],
        "46": [
            {
                "submission_id": 335,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:28:10.601Z"
            }
        ],
        "47": [
            {
                "submission_id": 204,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T07:01:15.629Z"
            }
        ],
        "49": [
            {
                "submission_id": 311,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-28T10:27:23.814Z"
            }
        ],
        "50": [
            {
                "submission_id": 303,
                "code": "b'#include <stdio.h>\\n#include <stdlib.h>\\n#include <time.h>\\n\\n// Function to generate a random number within a given range\\nint random_number(int min, int max) {\\n    return min + rand() % (max - min + 1);\\n}\\n\\n// Structure to represent a character\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char name[50];\\n    int health;\\n    int attack;\\n    int defense;\\n} Character;\\n\\ntypedef struct {\\n    char blablalalalsd[50];\\n} Character;\\nadsadada\\ndasdsadsadmasmdams\\nasdasdkadmasd\\n\\n\\n\\n\\nasd;sadmasmdlas\\nadsalkdlad\\n\\n// Function to initialize a character\\nCharacter initialize_character(char* name) {\\n    Character character;\\n    strcpy(character.name, name);\\n    character.health = 100;\\n    character.attack = random_number(10, 20);\\n    character.defense = random_number(5, 15);\\n    return character;\\n}\\n\\n// Function to simulate a battle between two characters\\nvoid battle(Character* player, Character* enemy) {\\n    printf(\"Battle begins between %s and %s!\\\\n\", player->name, enemy->name);\\n    while (player->health > 0 && enemy->health > 0) {\\n        // Player\\'s turn\\n        int player_damage = random_number(0, player->attack) - enemy->defense;\\n        if (player_damage < 0) player_damage = 0;\\n        enemy->health -= player_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", player->name, enemy->name, player_damage);\\n        if (enemy->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", player->name, enemy->name);\\n            break;\\n        }\\n\\n        // Enemy\\'s turn\\n        int enemy_damage = random_number(0, enemy->attack) - player->defense;\\n        if (enemy_damage < 0) enemy_damage = 0;\\n        player->health -= enemy_damage;\\n        printf(\"%s attacks %s for %d damage!\\\\n\", enemy->name, player->name, enemy_damage);\\n        if (player->health <= 0) {\\n            printf(\"%s defeated %s!\\\\n\", enemy->name, player->name);\\n            break;\\n        }\\n    }\\n}\\n\\nint main() {\\n    srand(time(NULL)); // Seed the random number generator\\n\\n    // Initialize player and enemy characters\\n    Character player = initialize_character(\"Player\");\\n    Character enemy = initialize_character(\"Enemy\");\\n\\n    // Battle\\n    battle(&player, &enemy);\\n\\n    // Display results\\n    printf(\"\\\\nBattle ended!\\\\n\");\\n    printf(\"%s\\'s Health: %d\\\\n\", player.name, player.health);\\n    printf(\"%s\\'s Health: %d\\\\n\", enemy.name, enemy.health);\\n\\n    return 0;\\n}\\n'",
                "submission_date": "2024-03-27T08:07:47.338Z"
            }
        ]
    }
}